# [[awk_title]]

## [[awk_basic_syntax]]

$ awk '{print $1}' file.txt
> [[awk_print_field_description]]

$ awk '{print $0}' file.txt
> [[awk_print_line_description]]

$ awk '{print $1, $3}' file.txt
> [[awk_print_multiple_fields_description]]

$ awk '{print NF}' file.txt
> [[awk_print_field_count_description]]

$ awk '{print NR}' file.txt
> [[awk_print_line_number_description]]

$ awk '{print $NF}' file.txt
> [[awk_print_last_field_description]]

## [[awk_pattern_matching]]

$ awk '/pattern/' file.txt
> [[awk_pattern_match_description]]

$ awk '!/pattern/' file.txt
> [[awk_pattern_not_match_description]]

$ awk '$1 == "value"' file.txt
> [[awk_field_equals_description]]

$ awk '$1 != "value"' file.txt
> [[awk_field_not_equals_description]]

$ awk '$1 ~ /regex/' file.txt
> [[awk_field_regex_description]]

$ awk '$1 !~ /regex/' file.txt
> [[awk_field_not_regex_description]]

$ awk '$1 > 100' file.txt
> [[awk_field_greater_description]]

$ awk '$1 >= 100' file.txt
> [[awk_field_greater_equal_description]]

$ awk '$1 < 100' file.txt
> [[awk_field_less_description]]

$ awk '$1 <= 100' file.txt
> [[awk_field_less_equal_description]]

## [[awk_variables_calculations]]

$ awk '{sum += $1} END {print sum}' file.txt
> [[awk_sum_calculation_description]]

$ awk '{count++} END {print count}' file.txt
> [[awk_count_lines_description]]

$ awk '{avg += $1} END {print avg/NR}' file.txt
> [[awk_average_calculation_description]]

$ awk '{if($1 > max) max = $1} END {print max}' file.txt
> [[awk_max_value_description]]

$ awk '{if($1 < min || min == "") min = $1} END {print min}' file.txt
> [[awk_min_value_description]]

$ awk '{print $1 * 2}' file.txt
> [[awk_multiply_description]]

$ awk '{print $1 / 2}' file.txt
> [[awk_divide_description]]

$ awk '{print $1 + $2}' file.txt
> [[awk_add_fields_description]]

$ awk '{print $1 - $2}' file.txt
> [[awk_subtract_fields_description]]

## [[awk_conditional_statements]]

$ awk '{if($1 > 10) print $0}' file.txt
> [[awk_if_statement_description]]

$ awk '{if($1 > 10) print "high"; else print "low"}' file.txt
> [[awk_if_else_description]]

$ awk '{print ($1 > 10) ? "high" : "low"}' file.txt
> [[awk_ternary_operator_description]]

$ awk '$1 > 10 && $2 < 5' file.txt
> [[awk_and_operator_description]]

$ awk '$1 > 10 || $2 < 5' file.txt
> [[awk_or_operator_description]]

$ awk '!($1 == 0)' file.txt
> [[awk_not_operator_description]]

## [[awk_loops_arrays]]

$ awk '{for(i=1; i<=NF; i++) print $i}' file.txt
> [[awk_for_loop_fields_description]]

$ awk '{for(i=NF; i>=1; i--) print $i}' file.txt
> [[awk_for_loop_reverse_description]]

$ awk '{count[$1]++} END {for(k in count) print k, count[k]}' file.txt
> [[awk_array_count_description]]

$ awk '{sum[$1] += $2} END {for(k in sum) print k, sum[k]}' file.txt
> [[awk_array_sum_description]]

$ awk '{if($1 in seen) print "duplicate"; else {seen[$1] = 1; print "unique"}}' file.txt
> [[awk_array_unique_description]]

## [[awk_string_functions]]

$ awk '{print length($1)}' file.txt
> [[awk_length_function_description]]

$ awk '{print substr($1, 1, 3)}' file.txt
> [[awk_substr_function_description]]

$ awk '{print toupper($1)}' file.txt
> [[awk_toupper_function_description]]

$ awk '{print tolower($1)}' file.txt
> [[awk_tolower_function_description]]

$ awk '{gsub(/old/, "new", $1); print $1}' file.txt
> [[awk_gsub_function_description]]

$ awk '{sub(/old/, "new", $1); print $1}' file.txt
> [[awk_sub_function_description]]

$ awk '{print index($1, "search")}' file.txt
> [[awk_index_function_description]]

$ awk '{print split($1, arr, ","); for(i in arr) print arr[i]}' file.txt
> [[awk_split_function_description]]

## [[awk_begin_end_blocks]]

$ awk 'BEGIN {print "Processing file..."} {print $1} END {print "Done!"}' file.txt
> [[awk_begin_end_description]]

$ awk 'BEGIN {FS=","} {print $1}' file.txt
> [[awk_begin_field_separator_description]]

$ awk 'BEGIN {OFS="\t"} {print $1, $2}' file.txt
> [[awk_begin_output_separator_description]]

$ awk 'BEGIN {sum=0} {sum+=$1} END {print "Total:", sum}' file.txt
> [[awk_begin_end_sum_description]]

## [[awk_built_in_variables]]

$ awk '{print FILENAME}' file.txt
> [[awk_filename_variable_description]]

$ awk '{print FNR}' file.txt
> [[awk_fnr_variable_description]]

$ awk '{print FS}' file.txt
> [[awk_fs_variable_description]]

$ awk '{print OFS}' file.txt
> [[awk_ofs_variable_description]]

$ awk '{print RS}' file.txt
> [[awk_rs_variable_description]]

$ awk '{print ORS}' file.txt
> [[awk_ors_variable_description]]

## [[awk_advanced_examples]]

$ awk 'NR==1 {print "Header:", $0} NR>1 {print "Data:", $0}' file.txt
> [[awk_header_data_description]]

$ awk '{print NR ": " $0}' file.txt
> [[awk_numbered_lines_description]]

$ awk '{printf "%-10s %-10s\n", $1, $2}' file.txt
> [[awk_formatted_output_description]]

$ awk '{print sprintf("%.2f", $1)}' file.txt
> [[awk_sprintf_description]]

$ awk 'length($0) > 50' file.txt
> [[awk_long_lines_description]]

$ awk '$1 ~ /^[0-9]+$/' file.txt
> [[awk_numeric_first_field_description]]

$ awk 'NF >= 3' file.txt
> [[awk_minimum_fields_description]]

$ awk '{print $1, ($2 > 100 ? "HIGH" : "LOW")}' file.txt
> [[awk_conditional_formatting_description]] 
